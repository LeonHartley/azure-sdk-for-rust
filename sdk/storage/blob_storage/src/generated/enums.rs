// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Rust Code Generator. DO NOT EDIT.

use typespec_client_core::{create_enum, create_extensible_enum};

create_extensible_enum!(
    AccessTier,
    (Archive, "Archive"),
    (Cool, "Cool"),
    (Hot, "Hot"),
    (P10, "P10"),
    (P15, "P15"),
    (P20, "P20"),
    (P30, "P30"),
    (P4, "P4"),
    (P40, "P40"),
    (P50, "P50"),
    (P6, "P6"),
    (P60, "P60"),
    (P70, "P70"),
    (P80, "P80")
);

create_extensible_enum!(
    AccountKind,
    (BlobStorage, "BlobStorage"),
    (BlockBlobStorage, "BlockBlobStorage"),
    (FileStorage, "FileStorage"),
    (Storage, "Storage"),
    (StorageV2, "StorageV2")
);

create_extensible_enum!(
    ArchiveStatus,
    (RehydratePendingToArchive, "rehydrate-pending-to-archive"),
    (RehydratePendingToCool, "rehydrate-pending-to-cool"),
    (RehydratePendingToExpired, "rehydrate-pending-to-expired"),
    (RehydratePendingToHot, "rehydrate-pending-to-hot")
);

create_extensible_enum!(
    BlobExpiryOptions,
    (Absolute, "Absolute"),
    (NeverExpire, "NeverExpire"),
    (RelativeToCreation, "RelativeToCreation"),
    (RelativeToNow, "RelativeToNow")
);

create_extensible_enum!(
    BlobImmutabilityPolicyMode,
    (Locked, "Locked"),
    (Mutable, "Mutable"),
    (Unlocked, "Unlocked")
);

create_extensible_enum!(
    BlobType,
    (AppendBlob, "AppendBlob"),
    (BlockBlob, "BlockBlob"),
    (PageBlob, "PageBlob")
);

create_extensible_enum!(
    BlockListType,
    (All, "all"),
    (Committed, "committed"),
    (Uncomitted, "uncommitted")
);

create_extensible_enum!(
    CopyStatus,
    (Aborted, "aborted"),
    (Failed, "failed"),
    (Pending, "pending"),
    (Success, "success")
);

create_extensible_enum!(
    DeleteSnapshotsOptionType,
    (Include, "include"),
    (Nonne, "none")
);

create_extensible_enum!(FilterBlobsIncludes, (None, "none"), (Versions, "versions"));

create_extensible_enum!(
    GeoReplicationStatus,
    (Bootstrap, "bootstrap"),
    (Live, "live"),
    (Unavailable, "unavailable")
);

create_extensible_enum!(LeaseDuration, (Fixed, "fixed"), (Infinite, "infinite"));

create_extensible_enum!(
    LeaseState,
    (Available, "available"),
    (Breaking, "breaking"),
    (Broken, "broken"),
    (Expired, "expired"),
    (Leased, "leased")
);

create_extensible_enum!(LeaseStatus, (Locked, "locked"), (Unlocked, "unlocked"));

create_extensible_enum!(
    ListBlobsIncludes,
    (Copies, "copies"),
    (Deleted, "deleted"),
    (DeletedWithVersions, "deletedwithversions"),
    (ImmutabilityPolicy, "immutabilitypolicy"),
    (LegalHold, "legalhold"),
    (Metadata, "metadata"),
    (Snapshots, "snapshots"),
    (Tags, "tags"),
    (UncommittedBlobs, "uncommittedblobs"),
    (Versions, "versions")
);

create_extensible_enum!(
    PremiumPageBlobAccessTier,
    (P10, "P10"),
    (P15, "P15"),
    (P20, "P20"),
    (P30, "P30"),
    (P4, "P4"),
    (P40, "P40"),
    (P50, "P50"),
    (P6, "P6"),
    (P60, "P60"),
    (P70, "P70"),
    (P80, "P80")
);

create_extensible_enum!(PublicAccessType, (Blob, "blob"), (Container, "container"));

create_extensible_enum!(QueryRequestTypeSqlOnly, (SQL, "SQL"));

create_extensible_enum!(
    QueryType,
    (Arrow, "arrow"),
    (Delimited, "delimited"),
    (JSON, "json"),
    (Parquet, "parquet")
);

create_extensible_enum!(RehydratePriority, (High, "High"), (Standard, "Standard"));

create_extensible_enum!(
    SequenceNumberActionType,
    (Increment, "increment"),
    (Max, "max"),
    (Update, "update")
);

create_extensible_enum!(
    SkuName,
    (PremiumLRS, "Premium_LRS"),
    (StandardGRS, "tandard_GRS"),
    (StandardLRS, "Standard_LRS"),
    (StandardRAGRS, "Standard_RAGRS"),
    (StandardZRS, "Standard_ZRS")
);
